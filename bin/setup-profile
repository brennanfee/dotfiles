#!/usr/bin/env bash

### START Bash strict mode
# shellcheck disable=SC2154
([[ -n ${ZSH_EVAL_CONTEXT} && ${ZSH_EVAL_CONTEXT} =~ :file$ ]] ||
  [[ -n ${BASH_VERSION} ]] && (return 0 2>/dev/null)) && SOURCED=true || SOURCED=false
if ! ${SOURCED}; then
  set -o errexit  # same as set -e
  set -o nounset  # same as set -u
  set -o errtrace # same as set -E
  set -o pipefail
  set -o posix
  #set -o xtrace # same as set -x, turn on for debugging

  shopt -s extdebug
  IFS=$(printf '\n\t')
fi
### END Bash strict mode

### START Script template bootstrap

script_name=$(basename "${BASH_SOURCE[0]}")
script_dir="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
script_author="Brennan Fee"
script_license="MIT License"
script_version="0.2"
script_date="2024-09-16"

function cleanup_vars() {
  unset script_name
  unset script_dir
  unset script_author
  unset script_license
  unset script_version
  unset script_date

  cleanup_script_vars
}

# Source script-tools.bash
if [[ -f "${script_dir}/../bash/script-tools.bash" ]]; then
  # shellcheck source=/home/brennan/.dotfiles/bash/script-tools.bash
  source "${script_dir}/../bash/script-tools.bash"
fi

function show_version() {
  print_status "${script_name}"
  print_status "Author: ${script_author} --- License: ${script_license}"
  print_status "Version: ${script_version} --- Date: ${script_date}"
  print_blank_line

  if [[ "${1:-}" == "exit" || "${1:-}" == "yes" ]]; then
    exit 0
  fi
}

### END Script template bootstrap

function cleanup_script_vars() {
  noop
}

function main() {
  # Create the mount directories
  mkdir -p "${HOME}/mounts/backups" "${HOME}/mounts/files" "${HOME}/mounts/other"

  # Create the profile directories
  mkdir -p "${HOME}/profile/cloud" "${HOME}/profile/documents" "${HOME}/profile/downloads" "${HOME}/profile/installs" "${HOME}/profile/music" "${HOME}/profile/pictures" "${HOME}/profile/public" "${HOME}/profile/source/github" "${HOME}/profile/templates" "${HOME}/profile/videos" "${HOME}/profile/vms"

  # Symlink the downloads folder
  if [[ ! -L "${HOME}/Downloads" || ! -d "${HOME}/Downloads" ]]; then
    rm -rf "${HOME}/Downloads"
    ln -s "${HOME}/profile/downloads" "${HOME}/Downloads"
  fi

  # Remove the other default xdg folders in the $HOME
  rm -rf "${HOME}/Documents"
  rm -rf "${HOME}/Music"
  rm -rf "${HOME}/Pictures"
  rm -rf "${HOME}/Templates"
  rm -rf "${HOME}/Videos"
}

### START Script main handler

function main_handler() {
  main "$@"
  cleanup_vars
}

main_handler "$@"

### END Script main handler
