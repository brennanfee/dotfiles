#!/usr/bin/env bash

# Bash strict mode
# shellcheck disable=SC2154
([[ -n ${ZSH_EVAL_CONTEXT} && ${ZSH_EVAL_CONTEXT} =~ :file$ ]] ||
  [[ -n ${BASH_VERSION} ]] && (return 0 2>/dev/null)) && SOURCED=true || SOURCED=false
if ! ${SOURCED}; then
  set -o errexit  # same as set -e
  set -o nounset  # same as set -u
  set -o errtrace # same as set -E
  set -o pipefail
  set -o posix
  #set -o xtrace # same as set -x, turn on for debugging

  shopt -s extdebug
  IFS=$(printf '\n\t')
fi
# END Bash scrict mode

# SCRIPT_NAME=$(basename "$0")
# SCRIPT_AUTHOR="Brennan Fee"
# SCRIPT_LICENSE="MIT License"
# SCRIPT_VERSION="0.1"
# SCRIPT_DATE="2024-08-27"

source "$(dirname "$0")/../bash/script-tools.bash"

# Usage: yt_helper <sub-command> "$@"
# Current supported sub-command:  yt (normal), ytp (alt location), ytm (music)
# Each of those commands, by default, will not download a playlist unless the
# url passed is JUST to the playlist (not a combined url - video within a playlist).
# To force the download of a list add 'l' to the command: ytl, ytpl, ytml.
function yt_helper() {
  local sub_command
  sub_command="${1:-unk}"
  shift

  if [[ "${sub_command}" == "unk" ]]; then
    throw_error_msg "Unknown yt-dlp-helper command!"
  fi

  # The url to download
  local url
  if [[ "${1:-}" =~ ^"http" ]]; then
    # It was passed in on the command line, always must be first one
    url="$1"
    shift
  elif is_wsl; then
    # Get url from windows clipboard
    url=$(powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command Get-Clipboard)
  else
    # Get url from linux (or mac?) clipboard
    url=$(xsel -o --clipboard)
  fi

  # Format
  local highFormat
  highFormat+="bestvideo[height<=?1080][vcodec~='^((he|a)vc1?|h26[45])']+bestaudio"
  highFormat+="/best[height<=?1080][vcodec~='^((he|a)vc1?|h26[45])']"
  highFormat+="/best[height<=?1080]"

  local lowFormat
  lowFormat+="bestvideo[height<=?720][vcodec~='^((he|a)vc1?|h26[45])']+bestaudio"
  lowFormat+="/best[height<=?720][vcodec~='^((he|a)vc1?|h26[45])']"
  lowFormat+="/best[height<=?720]"

  local format="${highFormat}"
  if [[ "${sub_command}" == "ytp" || "${sub_command}" == "ytpl" ]]; then
    format="${lowFormat}"
  fi

  ## Type
  local type="video"
  if [[ "${sub_command}" == "ytm" || "${sub_command}" == "ytml" ]]; then
    type="music"
    format="bestaudio/bestaudio*/best"
  fi

  # Playlist flag
  local playlist="--no-playlist"
  if [[ "${sub_command}" == "ytl" || "${sub_command}" == "ytpl" || "${sub_command}" == "ytml" ]]; then
    playlist="--yes-playlist"
  fi

  # Sort Order
  local sort_order="ext:mp4:m4a,proto"

  # Output directory
  local directory
  directory="$(xdg-user-dir VIDEOS)" ## default to video directory
  if [[ "${sub_command}" == "ytp" || "${sub_command}" == "ytpl" ]]; then
    directory="$(xdg-user-dir PICTURES)/_other" ## alternate location
  fi
  mkdir -p "${directory}"

  # Output file name
  local output="${directory}/%(title).125B-%(id)s-[%(channel,channel_id,creator,uploader)s].%(ext)s"

  local browser_auth=("--cookies-from-browser" "firefox")
  if [[ "${sub_command}" == "ytp" || "${sub_command}" == "ytpl" ]]; then
    browser_auth=("--cookies-from-browser" "chrome")
  fi
  ## Youtube started throttling cookies, need to support Oauth2 instead
  ## For this to work this plugin needs to be installed:
  ##   https://github.com/coletdjnz/yt-dlp-youtube-oauth2
  if [[ "${url}" =~ ^"https://www.youtube.com" ]]; then
    browser_auth=("--username" "oauth2" "--password" "''")
  fi

  echo "Downloading ${url}"
  if [[ "${type}" == "video" ]]; then
    yt-dlp "${browser_auth[@]}" --embed-metadata --embed-thumbnail --mark-watched --embed-chapters \
      "${playlist}" --no-mtime -i -S "${sort_order}" -f "${format}" \
      -o "${output}" "${url}" "$@"
  else
    yt-dlp "${browser_auth[@]}" --embed-metadata --embed-thumbnail \
      "${playlist}" --no-mtime -i -S "${sort_order}" -f "${format}" \
      --extract-audio --audio-format mp3 \
      -o "${output}" "${url}" "$@"
  fi
}

function main() {
  local sub_command
  sub_command="${1:-}"
  shift

  case "${sub_command}" in
  yt)
    yt_helper "yt" "$@"
    ;;
  ytl)
    yt_helper "ytl" "$@"
    ;;
  ytp)
    yt_helper "ytp" "$@"
    ;;
  ytpl)
    yt_helper "ytpl" "$@"
    ;;
  ytm)
    yt_helper "ytm" "$@"
    ;;
  ytml)
    yt_helper "ytml" "$@"
    ;;
  *)
    throw_error_msg "Unknown yt-dlp-helper command: '${1:-}'"
    ;;
  esac
}

main "$@"
