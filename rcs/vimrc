scriptencoding utf-8
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  set fileencodings=ucs-bom,utf-8,latin1
endif

let mapleader = ","
let maplocalleader = "\\"

set exrc
set pastetoggle=<F2>

set relativenumber  " set realtive numbers to show
set number " also display the line number of the current line
set numberwidth=5

set ignorecase
set smartcase

set scrolloff=4
set nowrap
if &diff
    set wrap
endif

set hlsearch
set gdefault
set cursorline
set colorcolumn=80,100,120

set hidden
set confirm
set ttyfast

set tabstop=4
set shiftwidth=4
set softtabstop=4
set shiftround
set expandtab
set smartindent

set backup
set backupdir=~/.vimscratch/backup//,$TEMP//,$TMP//

set swapfile
set directory=~/.vimscratch/swap//,$TEMP//,$TMP//

set undofile
set undodir=~/.vimscratch/undo//,$TEMP//,$TMP//

set noshowmode

set listchars=tab:>\ ,trail:-,extends:>,precedes:<
if (&termencoding ==# 'utf-8' || &encoding ==# 'utf-8') && version >= 700
  let &listchars="tab:\u25b8 ,trail:\u00b7,extends:\u00bb,precedes:\u00ab"
endif
set list

if exists('+macmeta')
  set macmeta
endif

set background=dark

if has('gui_running')
    set guioptions-=T
    set guioptions-=t
    set guioptions-=m
    colorscheme dracula
    if has('gui_win32') || has('gui_win64')
        set guifont=Hasklig:h14:cANSI
    elseif has('gui_macvim')
        set guifont=Hasklig:h18
    endif
else
    set term=xterm-256color
    set t_Co=256
    set termguicolors

    colorscheme dracula
endif

" Setup mouse
if has('mouse')
    set mouse=a
endif

if executable('ag')
    " Use Ag over Grep
    set grepprg=ag\ --vimgrep
    let g:ackprg = 'ag --vimgrep'

    " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag -i -l --nocolor --nogroup --hidden -g "" "%s"'
    " let g:ctrlp_user_command = 'dir %s /-n /b/s /a-d'

    " ag is fast enough that CtrlP doesn't need to cache
    let g:ctrlp_use_caching = 0
endif

if has('win32') || has('win64')
    set shell=$COMSPEC
endif

let g:ctrlp_working_path_mode = 'ra'

let g:EditorConfig_exclude_patterns = ['fugitive://.*']
if has('win32') || has('win64')
    let g:EditorConfig_exec_path = 'C:\ProgramData\chocolatey\bin\editorconfig.exe'
    let g:EditorConfig_core_mode = 'external_command'
endif

" Leader K to grep word under cursor
nnoremap <leader>k :grep! "\b<C-R><C-W>\b"<CR>:cw<CR><CR>

" Mappings to manage VimRc
nmap <leader>ev :e $MYVIMRC<CR>
nmap <leader>sv :source $MYVIMRC<CR>

" Mappings to use system clipboard
nnoremap <leader>p "*p
nnoremap <leader>P "*P
nnoremap <leader>y "*y
nnoremap <leader>yy "*yy
vnoremap <leader>p "*p
vnoremap <leader>P "*P
vnoremap <leader>y "*y
vnoremap <leader>yy "*yy

" Lightline settings are sufficiently verbose so as to need their own file
if filereadable($HOME . "/.vimrc.lightline")
  source ~/.vimrc.lightline
endif

" OS specific config, this should always be next to last
if filereadable($HOME . "/.vimrc.os")
  source ~/.vimrc.os
endif

" Local config, this should always be last
if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif
