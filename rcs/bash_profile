#!/usr/bin/env bash
# User dependent .bash_profile file

export BASHRC_LOGS=0
rm -f "${HOME}/profile/bashrc.log"

function log_profile() {
  if [[ ${BASHRC_LOGS} == "1" ]]; then
    local logPath="${HOME}"
    if [[ -d "${HOME}/profile" ]]; then
      logPath="${HOME}/profile"
    fi

    echo -e "$(/usr/bin/date --rfc-3339=ns):\n  $1" >>"${logPath}/bashrc.log"
  fi
}

log_profile "In bash_profile"

if command -v "mise" &>/dev/null; then
  eval "$(mise activate bash --shims)"
fi

# Most other places need to ONLY use the xdg-user-dir or my custom xdg_base_dir
# functions, but this directory is so critical and may not be loaded until after
# the base-profile.bash script has been run.  So I am being overly cautious with
# defaults on top of defaults here.  AFTER the base-profile is loaded the xdg
# functions should work and ALWAYS return valid paths.
dotfiles="${DOTFILES:-$(xdg-user-dir DOTFILES)}"
dotfiles="${dotfiles:-${HOME}/.dotfiles}"

log_profile "sourcing: ${dotfiles}/bash/base-profile.bash"
# shellcheck source=/home/brennan/.dotfiles/bash/base-profile.bash
source "${dotfiles}/bash/base-profile.bash"

log_profile "sourcing: ${dotfiles}/bash/script-tools.bash"
# shellcheck source=/home/brennan/.dotfiles/bash/script-tools.bash
source "${dotfiles}/bash/script-tools.bash"

# source bashrc if it exists
if [[ -f "${HOME}/.bashrc" ]]; then
  log_profile "sourcing bashrc"
  # shellcheck source=/home/brennan/.dotfiles/rcs/bashrc
  source "${HOME}/.bashrc"
fi

unset dotfiles
unset BASHRC_LOGS
